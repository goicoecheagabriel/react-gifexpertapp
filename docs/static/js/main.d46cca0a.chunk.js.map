{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","action","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","console","log","target","autoFocus","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMA8CeA,EAxCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAmBzC,OACI,sBAAMC,UAAU,SAASC,OAAO,GAAGC,SAZlB,SAACC,GAClBA,EAAEC,iBAEEN,EAAWO,OAAOC,OAAS,IAC3BV,GAAe,SAAAW,GAAI,OAAMT,GAAN,mBAAqBS,OACxCR,EAAc,MAOlB,SACI,uBACIS,KAAK,OACLC,YAAY,gBACZC,MAAOZ,EACPa,SAtBc,SAACR,GACvBS,QAAQC,IAAIV,EAAEW,QACdf,EAAcI,EAAEW,OAAOJ,QAqBfK,WAAS,O,+BChCZC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAIbC,EAJa,iDAIoCC,UAAUH,GAJ9C,+DAKAI,MAAOF,GALP,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAcnB,UAAU,yCAAxB,UACI,qBAAKiC,IAAKd,EAAKe,IAAKL,IACpB,4BAAKA,MAFCD,ICCLO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECJb,SAAEA,GAAa,IAAD,EAGZpB,mBAAS,CAC/B2B,KAAM,GACNY,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KAmBtC,OAXAC,qBAAU,WACPvB,EAASC,GACPuB,MAAM,SAAAC,GACH7B,QAAQC,IAAI4B,GACZH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGlB,CAACnB,IAEGoB,EDZ0BK,CAAczB,GAAlCa,EAHwB,EAG7BN,KAAaY,EAHgB,EAGhBA,QAcjB,OACI,qCAGEA,GAAW,mBAAGpC,UAAU,mCAAb,wBAIT,qBAAIA,UAAU,oCAAd,cAAqDiB,EAArD,OACA,qBAAKjB,UAAU,YAAf,SAEQ8B,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aER1Be,EAzBM,WAAK,IAAD,EAGe9C,mBAAS,CAAC,oBAHzB,mBAGd+C,EAHc,KAGFhD,EAHE,KAMrB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,8BAGQgD,EAAWlB,KAAK,SAAAT,GAAQ,OAAM,cAAC,EAAD,CAE1BA,SAAWA,GADJA,YCX/B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d46cca0a.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\n\n\n\nconst AddCategory = ( { setCategories } ) => {\n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e)=>{\n        console.log(e.target);\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n\n        }\n        \n    }\n\n    return (\n        <form className=\"header\" action=\"\" onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Buscar gift's\"\n                value={inputValue}\n                onChange={handleInputChange}\n                autoFocus\n                />\n        </form>\n\n        \n    )\n    \n    \n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n\n","export const getGifs = async ( category ) => {\n    // const api_key = 'QrSdM69MEDHnauk5os2EpW0lHA9zPcDu';\n    // const gif_url = 'api.giphy.com/v1/gifs/search';\n    \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=50&api_key=QrSdM69MEDHnauk5os2EpW0lHA9zPcDu`;\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    // console.log({id, title, url})\n    return (\n        <div key={id} className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\n\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n    const { data:images, loading } = useFetchGifs( category );\n\n    // useEffect(() => {\n    //     getGifs( category )\n    //         .then( setImages )\n    // }, [category])\n    \n    \n    // consulta a la api desde un helper\n    /*const awaitGifs = async category => setImages(await getGifs( category ))\n    awaitGifs(category)*/\n    \n  \n\n        return (\n            <>\n            {/* { loading ? 'Cargando...' : 'Data cargada' } */}\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n    \n            \n    \n                <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n                <div className=\"card-grid\">\n                    {\n                        images.map( img  => (\n                            <GifGridItem\n                                key={img.id}\n                                { ...img }\n                            />\n                        ))\n                    }\n                </div>\n            </>\n        )\n\n    \n}\n\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category )=>{\n\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n       getGifs( category )\n        .then( imgs =>{\n            console.log(imgs)\n            setState({\n                data: imgs,\n                loading: false\n            })\n        })\n    }, [category])\n\n    return state; // { data:[], loading:true }\n}\n\n","import React, {useState} from 'react';\nimport AddCategory  from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = ()=>{\n\n    \n    const [categories, setCategories] = useState(['Golden retrieve']);\n\n\n    return(\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories = { setCategories } />\n            <hr />\n            <div>\n                {\n                    // categories.map( category => (<li key={category}>{category}</li>))\n                    categories.map( category => ( <GifGrid\n                        key= { category }\n                        category={ category }\n                    /> ))\n                }\n            </div>\n        </>\n    )\n\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\n// const categories = [ 'One Punch', 'Samurai X', 'Dragon Ball' ];\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}